Priorities:
  Contacts
    - add flag to contacts "primary" or not (1/0)
    - contacs should be polymorphic, always connected to customer, supplier or warehouse
    - customer, supplier, warehouse should have:
      - 'add new contact' button
      - list of all connected contacts
        - edit button
        - remove button

  Sales!
    - Create sales with data(customer,seller,due_date etc)
      - must be able to choose contact_email, but primary should be first choice.
    - Create transaction to subtract the products from the selling warehouse
    - A resource to download a PDF(VAT number, bankgiro/plusgiro etc)
    - Implement state_machine
      email_state(not_sent, sent) [email_sent_at]



Javascript:
  app/view/products/_form.html.haml:
    * need js to show calculated retail price including vat.
      the ex-vat price is what should be saved...?
      or should the retail price saved in db be the inc vat price?
    * a nicer date picker for expire_at and refined_at
      - /products/new (_form)


Rails:
  * Add angular javascripts
  [x] * make table lists and form have consistent looks
  * Get all strings into using i18n's 't'-method.
  * Convert all views to haml. (devise's stuff is the only things left.)
    - find app/views/ -type f -name "*.erb"


Features:
  [x] - As a user, I can create, read, edit and delete suppliers.
  [x] - As a user, I can create, send and confirm transfers of
        products between warehouses.
  [x] - as a user, I can create, read, edit and delete products.
  [x] - as a user, I can create, read, edit and delete customers.
  [x] - as a user, I can create, read, edit and delete warehouses.
  - as a user, I can create and confirm sales.
    - This includes, subtracking items from a warehouse.
    - Sales should be tied to a customer, warehouse and a seller.
  - a sale invoice should have bankgiro etc from app/models/organisation.rb file.
  ... More needed

Add tests for:

Version 2 (or should this be done sooner?)
* Add support for multiple projects.
* Add support for OAuth'd users and projects.
