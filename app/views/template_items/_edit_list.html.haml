= simple_form_for @verificate, url: add_verificate_items_verificate_path(@verificate),  method: 'post', :html => { :class => 'form-horizontal frm' } do |f|
  / = render partial: 'shared/date_field', locals: {form: f, field: :posting_date, in_id: 'in_posting_date', in_value: @verificate.posting_date, out_id: 'verificate[posting_date]', field_id: 'posting_short_date',  model: 'posting_date', dp_open: 'posting_open', dp_options: 'posting_options', dp_click: 'open_posting_date($event)'}
  .table-responsive{}
    %table{:class => 'table table-striped'}
      %thead
        %tr
          %th= t(:account)
          %th= t(:description)
          %th= t(:result_unit)
          %th= t(:debit)
          %th= t(:credit)
          %th
      %tbody
        - @verificate.template.template_items.each_with_index do |item, index|
          %tr
          = f.simple_fields_for item do |i|
            - row = 'row['+index.to_s+']'
            - idx = 'row_'+index.to_s+'-'
            %td.numeric= i.input_field :number, id: idx, type:'text', readonly: true, class: 'form-control account'
            %td.hidden= i.input_field :account_id, id: idx+'account_id', name: row+'[account_id]', type:'text', readonly: true, class: 'form-control'
            %td= i.input_field :description,  id: idx+'description', name: row+'[description]', readonly: true, class: 'form-control'
            %td
              - if i.object.enable_result_unit
                %select{name: row+'[result_unit]', id: idx+'result_unit'}
                  %option
                    - @result_units.each do |r|
                      %option{value: r.id}= r.name
            %td
              %input{id: idx+'debit', name: row+'[debit]', class: 'numeric debit form-control', readonly: !i.object.enable_debit, value: '0'}
            %td
              %input{id: idx+'credit', name: row+'[credit]', class: 'numeric credit form-control', readonly: !i.object.enable_credit, value: '0'}
            %td
        %tr
          %td
          %td
            = t(:total)
          %td
          %td.numeric
            %input{id: 'total_debit', class: 'numeric form-control', disabled: 'true', value: '0'}
          %td.numeric
            %input{id: 'total_credit', class: 'numeric form-control', disabled: 'true', value: '0'}
          %td

  .form-button-group
    .actions
      = f.submit "#{t:add_template}",  id: 'confirm', class: 'btn btn-primary'

:javascript
  $(document).ready(function() {
    $('#confirm').attr('disabled', 'disabled');
    set_bank_amount(true);
    $('.frm').submit(function(e) {
        $.each($(".debit"), function(idx,el){el.value = el.value.replace(',','.');});
        $.each($(".credit"), function(idx,el){el.value = el.value.replace(',','.');});
    });
    $(".debit").change(function() {
      $('#total_debit').val(summa(".debit"));
      check_balance();
    });

    $(".credit").change(function() {
      $('#total_credit').val(summa(".credit"));
      check_balance();
    });
  })





  function set_bank_amount(should_retry) {
    let param = new URLSearchParams(window.location.search)
    let amount = parseFloat(param.get('bank_amount'))
    if (!amount) {
      if (should_retry) {
        setTimeout(function() { set_bank_amount(false) }, 1500)
      }
      return;
    }
    $(".account").each(function() {
      if (this.value == '1920') {
        let deb = '#' + this.id + 'debit';
        let cre = '#' + this.id + 'credit';
        if ($(deb).is('[readonly]')) {
          $(deb).val(0);
          $(cre).val(-amount);
          $('#total_credit').val(summa(".credit"));
        }
        if ($(cre).is('[readonly]')) {
          $(deb).val(amount);
          $(cre).val('0');
          $('#total_debit').val(summa(".debit"));
        }
      }
    })
  }

  function summa(elem) {
    let sum = 0;
    $(elem).each(function() {
      if(!isNaN(this.value) && this.value.length != 0) {
        sum += parseFloat(this.value);
      }
    })
    return sum
  }

  function check_balance() {
     if ($('#total_debit').val() ==  $('#total_credit').val()) {
         $('#confirm').removeAttr("disabled");
    }
    else {
      $('#confirm').attr('disabled', 'disabled');
    }
  }
