= simple_form_for(@purchase, wrapper: :horizontal_form, html: {class: 'form-horizontal'}) do |p|
  = p.input :description,  disabled: true
  = p.association :supplier, disabled: true

= simple_form_for([@purchase, @purchase_item], wrapper: :horizontal_form, html: {class: 'form-horizontal', id:'formx'}) do |f|
  = f.error_notification

  = f.input :quantity

  .form-group.form-inline
    .labels_width.control-label
      = f.label :item
    .fields_width
      = f.collection_select :item_id, @item_selections, :id, :name

  .form-group.form-inline{:id => 'batch_group'}
    .labels_width.control-label
      = f.label :batch
    .fields_width
      = f.grouped_collection_select :batch_id, @item_selections, :batches, :name, :id, :name

  .form-group
    %label{:class => 'labels_width control-label'}
      = t(:unit)
    .fields_width
      %input{:id => 'unit',  :class => 'form-control medium', :readonly=>'readonly'}

  = f.input :price, as: :hidden
  .form-group.form-inline
    .labels_width.control-label
      = f.label :price
    .fields_width
      %input{id: 'price_edit', type: 'number', class: 'form-control numeric', value: 0}
      = info_modal('#itemPriceId')

  .form-button-group
    .actions
      = f.submit class: 'btn btn-primary', ng_click: 'before_submit()'

  = render partial: 'shared/modal_infos', locals: {modalId: 'itemPriceId' , modalBody: 'info_item_price'}

:javascript

  $(document).ready(function() {

    $("#purchase_item_item_id").change(function() {
      set_batches();
      set_unit_and_price();
    });
    $("#price_edit").blur(function() {
      $('#purchase_item_price').val(Calc.toInteger($('#price_edit').val()));
    });

    var models = $('#purchase_item_batch_id').html();
    var p = $('#purchase_item_price').val();
    var pri = true;
    if (p == '') {
      pri = false;
    }
    set_batches();
    set_unit_and_price();

    function set_batches() {
      var item = $("#purchase_item_item_id option:selected").text();
      var options = $(models).filter('optgroup[label="'+item+'"]').html();
      if (options.length) {
        $('#purchase_item_batch_id').html(options);
        $('#batch_group').show();
      }
      else {
        $('#purchase_item_batch_id').empty();
        $('#batch_group').hide();
      }
    }

    function set_unit_and_price() {
      var item_id = $("#purchase_item_item_id").val();
      for (var x=0; x < gon.items.length; x++) {
        if (item_id == gon.items[x].id) {
          $('#unit').val(gon.items[x].unit.name);
          if (pri) {
            $('#price_edit').val(Calc.toDecimal(p));
            pri = false;
          }
          else {
            var pr = gon.items[x].in_price;
            $('#price_edit').val(Calc.toDecimal(pr));
            $('#purchase_item_price').val(Calc.toInteger($('#price_edit').val()));
          }
        }
      }
    }

  });