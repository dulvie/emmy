%div{:ng_controller => "ModalCtrl"}
  = simple_form_for(@import, wrapper: :horizontal_form, html: {class: 'form-horizontal'}) do |f|
    = f.error_notification

    = f.input :description, disabled: @import.is_completed?
    = f.association :our_reference, disabled: @import.is_completed?
    = f.association :to_warehouse,  disabled: !@import.new_record?
    - if !@import.new_record?
      = f.input:state, disabled: true, :input_html => {:class => 'medium'}
    - if @import.is_started? || @import.is_completed?
      = f.input :started_at, :as => :string,  disabled: true, :input_html => { :class => 'date', :value => localize(f.object.started_at, :format => "%Y-%m-%d"), :readonly => 'readonly'}     

    - if !@import.new_record? && @importing.nil? && @import.product.nil?
      - set_product_url = new_product_path({class:@import.class.name, object:@import.id})
      = render partial: 'shared/addon_plus_link', locals: {form: f, label: :product, link: set_product_url}

    - if @importing.nil? && !@import.product.nil?
      .form-group
        .labels_width.control-label
          = f.label :product
        .fields_width
          %input{:value => @import.product.name, :readonly=>'readonly', :class=>'form-control'}

    - if !@importing.nil?
      .form-group
        .labels_width.control-label
          = f.label :product
        .fields_width
          %input{:value => @importing.purchase_items.first.product.name, :readonly=>'readonly', :class=>'form-control'}
      .form-group
        .labels_width.control-label
          = f.label t(:quantity)
        .fields_width
          %input{:value => @importing.purchase_items.first.quantity, :readonly=>'readonly', :class=>'form-control numeric'}

    - if @import.is_completed?
      = f.input :amount, disabled: true
      = f.input :cost_price, disabled: true

    - if !@import.is_completed? 
      = f.submit class: 'btn btn-primary'
    - if !@import.new_record? && @import.can_edit_state? && @import.can_edit_items?
      %button{:class=>"btn btn-primary", :ng_click=>"open($event, 'sm','importContent' )"}
        %span{ :class => "glyphicon glyphicon-flag"} 
        = f.object.next_event
    = link_to 'Back', imports_path, class: 'btn btn-primary'
    %hr
  - if !@import.new_record? && @import.can_edit_state?
    = render partial: 'shared/modal_state_change', locals: {idx: 'importContent', model: @import, form_path: state_change_import_path(@import), event: 'start', return_path: edit_import_path(@import)}
